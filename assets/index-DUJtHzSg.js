(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();class u{constructor(e,t,o,r){this.name=e,this.trickTakingRank=t,this.score=o,this.ttRankAbove=r}toString(){return this.name}toStringShort(){return this.name[0]}}class p{constructor(e,t){this.name=e,this.rankForTrumpPreference=t}toString(){return this.name}toStringShort(){return this.name[0]}}class b{constructor(e,t){this.suit=e,this.rank=t}toString(){return`${this.rank.toString()} of ${this.suit.toString()}`}toStringShort(){return`${this.rank.toStringShort()}${this.suit.toStringShort()}`}}const _=[...Array.from({length:9},(n,e)=>{const t=e+2;return new u(t!==10?String(t):"T",t,t,t+1)}),new u("J",11,12,12),new u("Q",12,15,13),new u("K",13,18,14),new u("A",14,1,4)],k=[new p("Diamonds",0),new p("Hearts",1),new p("Spades",2),new p("Clubs",3)];class S{constructor(e=4){this.minRank=e,this.cards=[],this.reset()}reset(){this.cards=[];for(const e of k)for(const t of _){let o=new b(e,t);t.name=="A"&&(o.rank.ttRankAbove=this.minRank),this.cards.push(o)}this.shuffle()}shuffle(){for(let e=this.cards.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.cards[e],this.cards[t]]=[this.cards[t],this.cards[e]]}}draw(){return this.cards.pop()}isEmpty(){return this.cards.length===0}get count(){return this.cards.length}}class T{constructor(e,t,o,r){this.displayName=e,this.name=t,this.hand=o}}class C{constructor(e){this.playerNames=e,this.players=[],this.pack=new S;for(const t of e)this.players.push(new T(t,"player",[],0));this.dealerIndex=0,this.currentPlayerIndex=0}giveCardToPlayer(e,t){this.players[e].hand.push(t)}getPlayerHand(e){return this.players[e].hand??[]}playCard(e,t){const o=this.getPlayerHand(e);if(!o)return!1;const r=o.findIndex(a=>a.rank===t.rank&&a.suit===t.suit);if(r>=0){const[a]=o.splice(r,1);return!0}return!1}getStateForUI(){return{hands:{comp1:this.getPlayerHand(1),player:this.getPlayerHand(0),comp2:this.getPlayerHand(2),neutral:[]},played:{comp1:null,player:null,comp2:null,neutral:null},previous:{comp1:null,player:null,comp2:null,neutral:null},ladder:{comp1:[],player:[],comp2:[],neutral:[]},scores:{comp1:0,player:0,comp2:0,neutral:0},scores_previous:{comp1:0,player:0,comp2:0,neutral:0},score_details:{},holding_bonus:{comp1:{},player:{},comp2:{},neutral:{}},dead:[],penultimate:[],escalations:-1,hand_number:-1,trumps:"S",advance:"C",game_state:"play_card",whose_turn:"human"}}}class I{constructor(e){this.pack=new S,this.state=new C(e),this.dealInitialCards()}dealInitialCards(e=12){for(let t=0;t<e;t++)for(let o=0;o<3;o++){const r=this.pack.draw();console.log(r),r&&this.state.giveCardToPlayer(o,r)}}getGameState(){return this.state}getGameStateForUI(){return this.state.getStateForUI()}playCard(e,t){return!0}}const $={2:0,3:1,4:2,5:3,6:4,7:5,8:6,9:7,T:8,J:9,Q:10,K:11,A:12},E={S:0,H:1,C:2,D:3},v=72,H=96;function d(n,e){const t=document.createElement("span");t.className="card";const o=n.match(/^([0-9TJQKA])([SHDC])$/);if(o){const[,r,a]=o,s=$[r],c=E[a];t.style.backgroundPosition=`-${s*v}px -${c*H}px`}else t.innerText=n,t.style.background="#ccc";return e&&(t.onclick=()=>e(n)),t}function h(n){const e=document.createElement("span");e.className="suit-icon";const t=n.match(/^([SHDC])$/),o=32;if(t){const[,r]=t,a=E[r];e.style.backgroundPosition=`32px -${a*o}px`}else e.innerText="",e.style.background="#ccc";return e}function P(n){return["player","comp1","comp2"].map(e=>{const t=n[e];let o=`${e}: `;for(const[r,a]of Object.entries(t.ladder_bonuses)){let s=`+ ${a.rank_base_value} `;a.holding_bonus_multiplier>1&&(s+=`x ${a.holding_bonus_multiplier} `),s+=` (${r}) `,o+=s}return t.final_trick_bonus!==0&&(o+=` + ${t.final_trick_bonus} (FT)`),o}).join(", ")}function y(n){console.log(n);const e=document.getElementById("player-hand");e.innerHTML="",n.hands.player.forEach(s=>{e.appendChild(d(s.toStringShort(),B))}),["player","comp1","comp2"].forEach(s=>{const c=document.getElementById(`played-${s}`);c.innerHTML="";const i=n.played[s];if(i){const l=d(i.toStringShort());l.classList.add("played-card"),c.appendChild(l)}}),["player","comp1","comp2"].forEach(s=>{const c=document.getElementById(`prev-${s}`);c.innerHTML="";const i=n.previous[s];if(i){const l=d(i.toStringShort());l.classList.add("played-card"),c.appendChild(l)}}),["player","comp1","comp2"].forEach(s=>{const c=document.getElementById(`hb-${s}`);c.innerHTML="";const i=n.holding_bonus[s];for(const[l,w]of Object.entries(i))for(let f=0;f<w;f++){const g=h(l);g.classList.add("holding-bonus-icon"),c.appendChild(g)}}),["neutral","player","comp1","comp2"].forEach(s=>{const c=document.getElementById(`ladder-${s}`);c.innerHTML="",n.ladder[s].forEach(i=>{c.appendChild(d(i.toStringShort()))})});const t=document.getElementById("penultimate-display"),o=document.getElementById("dead-display");t.innerHTML="",o.innerHTML="",n.penultimate.forEach(s=>t.appendChild(d(s.toStringShort()))),n.dead.forEach(s=>o.appendChild(d(s.toStringShort()))),document.getElementById("scores").innerText=`You: ${n.scores.player}, comp 1: ${n.scores.comp1}, comp 2: ${n.scores.comp2}`,document.getElementById("scores-previous").innerText=`prev: (You: ${n.scores_previous.player}, comp 1: ${n.scores_previous.comp1}, comp 2: ${n.scores_previous.comp2})`,document.getElementById("score-breakdown").innerText=P(n.score_details),document.getElementById("escalations").innerText=`Escalations: ${n.escalations} (hand #${n.hand_number})`;const r=document.getElementById("trumps");r.innerHTML="",r.appendChild(h(n.trumps));const a=document.getElementById("advance");switch(a.innerHTML="",a.appendChild(h(n.advance)),n.game_state){case"play_card":if(n.whose_turn==="human")break;m(700);break;case"trick_complete":m(1700);break;case"hand_complete":m(3e3);break}}async function m(n){await x(n),M()}function x(n){return new Promise(e=>setTimeout(e,n))}async function L(n){document.getElementById("player-hand").appendChild(d("4D"));const t=n.getGameStateForUI();y(t)}async function B(n){const t=await(await fetch("/play_card",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({card:n})})).json();y(t)}async function M(){const e=await(await fetch("/increment_state",{method:"POST"})).json();y(e)}window.onload=()=>{const n=new I(["Alice","Bob","Charlie"]);L(n)};
